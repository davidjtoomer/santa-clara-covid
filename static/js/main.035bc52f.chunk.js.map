{"version":3,"sources":["store/types.js","store/reducers.js","store/index.js","store.js","components/Navbar/NavbarButton.jsx","components/Navbar/Navbar.jsx","store/actions.js","components/Charts/CasesChart/CasesChart.jsx","components/Charts/DeathsChart/DeathsChart.jsx","components/Charts/AgeChart/AgeChart.jsx","components/Charts/SexChart/SexChart.jsx","components/Charts/EthnicityChart/EthnicityChart.jsx","components/Charts/Charts.jsx","App.jsx","index.jsx"],"names":["LOADING_START","LOADING_END","FETCH_CASE_DATA","FETCH_AGE_DEMOGRAPHIC_DATA","FETCH_SEX_DEMOGRAPHIC_DATA","FETCH_ETHNICITY_DEMOGRAPHIC_DATA","initialBaseState","loading","baseReducer","state","action","type","initialDataState","cases","age","sex","ethnicity","dataReducer","payload","createRootReducer","combineReducers","base","data","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","NavbarButton","props","className","href","target","text","Navbar","fetchAllData","dispatch","fetchCaseData","then","fetchAgeData","fetchSexData","fetchEthnicityData","parseCaseData","cases_json","labels","new_count_confirmed","total_count_confirmed","new_count_deaths","total_count_deaths","forEach","obj","push","Date","date","newcountconfirmed","totalcountconfirmed","newcountdeaths","totalcountdeaths","a","axios","get","params","resource_id","q","limit","response","console","log","result","records","catch","error","parseAgeData","age_data","total_confirmed","confirmed_percentage","total_deaths","death_percentage","california_age_percentage","i","length","age_group","totalpositive","case_percent","deaths","deaths_percent","ca_percent","parseSexData","sex_data","california_sex_percentage","totalpositive2","parseEthnicityData","ethnicity_data","california_ethnicity_percentage","race_ethnicity","case_percentage","deaths_percentage","percent_ca_population","CasesChart","case_data","useSelector","datasets","label","yAxisID","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointRadius","options","responsive","pan","enabled","mode","zoom","scales","xAxes","time","unit","gridLines","color","yAxes","id","position","ticks","fontColor","DeathsChart","AgeChart","borderWidth","title","display","legend","SexChart","EthnicityChart","Charts","useDispatch","useEffect","Fragment","size","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.035bc52f.chunk.js","sourcesContent":["export const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\nexport const FETCH_CASE_DATA = 'FETCH_CASE_DATA';\nexport const FETCH_AGE_DEMOGRAPHIC_DATA = 'FETCH_AGE_DEMOGRAPHIC_DATA';\nexport const FETCH_SEX_DEMOGRAPHIC_DATA = 'FETCH_SEX_DEMOGRAPHIC_DATA';\nexport const FETCH_ETHNICITY_DEMOGRAPHIC_DATA = 'FETCH_ETHNICITY_DEMOGRAPHIC_DATA';","import {\n  LOADING_START, \n  LOADING_END, \n  FETCH_CASE_DATA,\n  FETCH_AGE_DEMOGRAPHIC_DATA,\n  FETCH_SEX_DEMOGRAPHIC_DATA,\n  FETCH_ETHNICITY_DEMOGRAPHIC_DATA\n} from './types';\n\nconst initialBaseState = {\n  loading: true\n};\n\nexport const baseReducer = (state = initialBaseState, action) => {\n  switch (action.type) {\n    case LOADING_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOADING_END:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  };\n};\n\nconst initialDataState = {\n  cases: null,\n  age: null,\n  sex: null,\n  ethnicity: null\n};\n\nexport const dataReducer = (state = initialDataState, action) => {\n  switch (action.type) {\n    case FETCH_CASE_DATA: \n      return {\n        ...state,\n        cases: action.payload\n      };\n    case FETCH_AGE_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        age: action.payload\n      };\n    case FETCH_SEX_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        sex: action.payload\n      };\n    case FETCH_ETHNICITY_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        ethnicity: action.payload\n      };\n    default:\n      return state;\n  };\n};","import {combineReducers} from 'redux';\nimport {baseReducer, dataReducer} from './reducers';\n\nconst createRootReducer = () => combineReducers({\n  base: baseReducer,\n  data: dataReducer\n});\n\nexport default createRootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createRootReducer from './store/index';\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import React from 'react';\n\nconst NavbarButton = (props) => (\n  <div className='navbar-button'>\n    <a href={props.href} target={props.target}>\n      <button>{props.text}</button>\n    </a>\n  </div>\n);\n\nexport default NavbarButton;","import React from 'react';\nimport NavbarButton from './NavbarButton';\n\nconst Navbar = () => {\n  return (\n    <div className='navbar'>\n      <div className='navbar-text'>\n        <h5>Santa Clara County</h5>\n        <h6>Visualizing Real-Time COVID-19 Statistics</h6>\n      </div>\n      <div className='navbar-links'>\n        <NavbarButton\n          text = 'Data' \n          href = 'https://data.ca.gov/dataset/covid-19-cases'\n          target = '_blank'\n        />\n        <NavbarButton\n          text = 'Source Code'\n          href = 'https://github.com/davidjtoomer/santa-clara-covid'\n          target = '_blank'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import axios from 'axios';\nimport {\n  LOADING_START, \n  LOADING_END, \n  FETCH_CASE_DATA, \n  FETCH_AGE_DEMOGRAPHIC_DATA,\n  FETCH_SEX_DEMOGRAPHIC_DATA,\n  FETCH_ETHNICITY_DEMOGRAPHIC_DATA\n} from './types';\n\nexport const loadingStart = () => ({\n  type: LOADING_START\n});\n\nexport const loadingEnd = () => ({\n  type: LOADING_END\n});\n\nexport const fetchAllData = () => dispatch => {\n  dispatch(loadingStart());\n  fetchCaseData(dispatch)\n  .then(() => fetchAgeData(dispatch))\n  .then(() => fetchSexData(dispatch))\n  .then(() => fetchEthnicityData(dispatch))\n  .then(() => dispatch(loadingEnd()));\n};\n\nconst parseCaseData = cases_json => {\n  let labels = [];\n  let new_count_confirmed = [];\n  let total_count_confirmed = [];\n  let new_count_deaths = [];\n  let total_count_deaths = [];\n\n  cases_json.forEach(obj => {\n    labels.push(new Date(obj.date));\n    new_count_confirmed.push(obj.newcountconfirmed);\n    total_count_confirmed.push(obj.totalcountconfirmed);\n    new_count_deaths.push(obj.newcountdeaths);\n    total_count_deaths.push(obj.totalcountdeaths);\n  });\n\n  return {\n    labels: labels,\n    new_count_confirmed: new_count_confirmed,\n    total_count_confirmed: total_count_confirmed,\n    new_count_deaths: new_count_deaths,\n    total_count_deaths: total_count_deaths\n  };\n};\n\nconst fetchCaseData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '926fd08f-cc91-4828-af38-bd45de97f8c3',\n      q: 'Santa Clara',\n      limit: 1000\n    }\n  })\n    .then(response => {\n      console.log(response.data); \n      dispatch({\n        type: FETCH_CASE_DATA,\n        payload: parseCaseData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseAgeData = age_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_age_percentage = [];\n  const num_categories = 5;\n\n  for (let i = age_data.length - num_categories; i < age_data.length; ++i) {\n    labels.push(age_data[i].age_group);\n    total_confirmed.push(age_data[i].totalpositive);\n    confirmed_percentage.push(age_data[i].case_percent);\n    total_deaths.push(age_data[i].deaths);\n    death_percentage.push(age_data[i].deaths_percent);\n    california_age_percentage.push(age_data[i].ca_percent);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_age_percentage: california_age_percentage\n  };\n};\n\nconst fetchAgeData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '339d1c4d-77ab-44a2-9b40-745e64e335f2',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_AGE_DEMOGRAPHIC_DATA,\n        payload: parseAgeData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseSexData = sex_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_sex_percentage = [];\n  const num_categories = 3;\n\n  for (let i = sex_data.length - num_categories; i < sex_data.length; ++i) {\n    labels.push(sex_data[i].sex);\n    total_confirmed.push(sex_data[i].totalpositive2);\n    confirmed_percentage.push(sex_data[i].case_percent);\n    total_deaths.push(sex_data[i].deaths);\n    death_percentage.push(sex_data[i].deaths_percent);\n    california_sex_percentage.push(sex_data[i].ca_percent);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_sex_percentage: california_sex_percentage\n  };\n};\n\nconst fetchSexData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: 'ee01b266-0a04-4494-973e-93497452e85f',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_SEX_DEMOGRAPHIC_DATA,\n        payload: parseSexData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseEthnicityData = ethnicity_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_ethnicity_percentage = [];\n  const num_categories = 8;\n\n  for (let i = ethnicity_data.length - num_categories; i < ethnicity_data.length; ++i) {\n    labels.push(ethnicity_data[i].race_ethnicity);\n    total_confirmed.push(ethnicity_data[i].cases);\n    confirmed_percentage.push(ethnicity_data[i].case_percentage);\n    total_deaths.push(ethnicity_data[i].deaths);\n    death_percentage.push(ethnicity_data[i].deaths_percentage);\n    california_ethnicity_percentage.push(ethnicity_data[i].percent_ca_population);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_ethnicity_percentage: california_ethnicity_percentage\n  };\n};\n\nconst fetchEthnicityData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '7e477adb-d7ab-4d4b-a198-dc4c6dc634c9',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_ETHNICITY_DEMOGRAPHIC_DATA,\n        payload: parseEthnicityData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-zoom';\n\nconst CasesChart = () => {\n  const case_data = useSelector(state => state.data.cases);\n\n  return (\n    <div className='cases-chart-container'>\n      <div className='cases-chart-title'>\n        <h5>Confirmed Cases in Santa Clara County</h5>\n      </div>\n      <div className='cases-chart'>\n        {case_data &&\n          <Line\n            data = {{\n              labels: case_data.labels,\n              datasets: [\n                {\n                  label: 'New Confirmed Cases',\n                  data: case_data.new_count_confirmed,\n                  yAxisID: 'new',\n                  borderColor: '#82c9e6',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }, \n                {\n                  label: 'Cumulative Confirmed Cases',\n                  data: case_data.total_count_confirmed,\n                  yAxisID: 'cumulative',\n                  borderColor: '#f45060',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }\n              ]\n            }}\n            options = {{\n              responsive: true,\n              pan: {\n                enabled: true,\n                mode: 'xy'\n              },\n              zoom: {\n                enabled: true,\n                mode: 'xy'\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time: {\n                    unit: 'day'\n                  },\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }],\n                yAxes: [{\n                  id: 'new',\n                  type: 'linear',\n                  position: 'left',\n                  gridLines: {\n                    color: '#1e2130'\n                  },\n                  ticks: {\n                    fontColor: '#82c9e6'\n                  }\n                }, {\n                  id: 'cumulative',\n                  type: 'linear',\n                  position: 'right',\n                  gridLines: {\n                    color: '#1e2130'\n                  },\n                  ticks: {\n                    fontColor: '#f45060'\n                  }\n                }]\n              }\n            }}\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default CasesChart;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-zoom';\n\nconst DeathsChart = () => {\n  const case_data = useSelector(state => state.data.cases);\n\n  return (\n    <div className='deaths-chart-container'>\n      <div className='deaths-chart-title'>\n        <h5>Deaths from COVID-19 in Santa Clara County</h5>\n      </div>\n      <div className='deaths-chart'>\n        {case_data &&\n          <Line\n            data = {{\n              labels: case_data.labels,\n              datasets: [\n                {\n                  label: 'New COVID-19 Deaths',\n                  data: case_data.new_count_deaths,\n                  yAxisID: 'new',\n                  borderColor: '#f4d44d',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }, \n                {\n                  label: 'Cumulative COVID-19 Deaths',\n                  data: case_data.total_count_deaths,\n                  yAxisID: 'cumulative',\n                  borderColor: '#f45060',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }\n              ]\n            }}\n            options = {{\n              responsive: true,\n              pan: {\n                enabled: true,\n                mode: 'xy'\n              },\n              zoom: {\n                enabled: true,\n                mode: 'xy'\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time: {\n                    unit: 'day'\n                  },\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }],\n                yAxes: [{\n                  id: 'new',\n                  type: 'linear',\n                  position: 'left',\n                  gridLines: {\n                    color: '#1e2130'\n                  },\n                  ticks: {\n                    fontColor: '#f4d44d'\n                  }\n                }, {\n                  id: 'cumulative',\n                  type: 'linear',\n                  position: 'right',\n                  gridLines: {\n                    color: '#1e2130'\n                  },\n                  ticks: {\n                    fontColor: '#f45060'\n                  }\n                }]\n              }\n            }}\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default DeathsChart;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\n\nconst AgeChart = () => {\n  const age_data = useSelector(state => state.data.age);\n\n  return (\n    <div className='age-chart-container'>\n      <div className='age-chart-title'>\n        <h5>Age (All–CA)</h5>\n      </div>\n      {age_data &&\n        <div className='age-charts'>\n          <div className='age-chart'>\n            <Doughnut\n              data = {{\n                labels: age_data.labels,\n                datasets: [\n                  {\n                    label: 'Cases',\n                    data: age_data.total_confirmed,\n                    backgroundColor: [\n                      '#f3f5f4',\n                      '#f4d44d',\n                      '#82c9e6',\n                      '#f45060',\n                      '#a9a9a9'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Cases'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n          <div className='age-chart'>\n            <Doughnut\n              data = {{\n                labels: age_data.labels,\n                datasets: [\n                  {\n                    label: 'Deaths',\n                    data: age_data.total_deaths,\n                    backgroundColor: [\n                      '#f3f5f4',\n                      '#f4d44d',\n                      '#82c9e6',\n                      '#f45060',\n                      '#a9a9a9'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Deaths'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default AgeChart;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\n\nconst SexChart = () => {\n  const sex_data = useSelector(state => state.data.sex);\n\n  return (\n    <div className='sex-chart-container'>\n      <div className='sex-chart-title'>\n        <h5>Sex (All–CA)</h5>\n      </div>\n      {sex_data &&\n        <div className='sex-charts'>\n          <div className='sex-chart'>\n            <Doughnut\n              data = {{\n                labels: sex_data.labels,\n                datasets: [\n                  {\n                    label: 'Cases',\n                    data: sex_data.total_confirmed,\n                    backgroundColor: [\n                      '#a9a9a9',\n                      '#82c9e6',\n                      '#f3f5f4'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Cases'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n          <div className='sex-chart'>\n            <Doughnut\n              data = {{\n                labels: sex_data.labels,\n                datasets: [\n                  {\n                    label: 'Deaths',\n                    data: sex_data.total_deaths,\n                    backgroundColor: [\n                      '#a9a9a9',\n                      '#82c9e6',\n                      '#f3f5f4'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Deaths'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default SexChart;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\n\nconst EthnicityChart = () => {\n  const ethnicity_data = useSelector(state => state.data.ethnicity);\n\n  return (\n    <div className='ethnicity-chart-container'>\n      <div className='ethnicity-chart-title'>\n        <h5>Ethnicity (All–CA)</h5>\n      </div>\n      {ethnicity_data &&\n        <div className='ethnicity-charts'>\n          <div className='ethnicity-chart'>\n            <Doughnut\n              data = {{\n                labels: ethnicity_data.labels,\n                datasets: [\n                  {\n                    label: 'Cases',\n                    data: ethnicity_data.total_confirmed,\n                    backgroundColor: [\n                      '#f3f5f4',\n                      '#f4d44d',\n                      '#82c9e6',\n                      '#f45060',\n                      '#a9a9a9',\n                      '#ff939e',\n                      '#419be6',\n                      '#1e2130'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Cases'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n          <div className='ethnicity-chart'>\n            <Doughnut\n              data = {{\n                labels: ethnicity_data.labels,\n                datasets: [\n                  {\n                    label: 'Deaths',\n                    data: ethnicity_data.total_deaths,\n                    backgroundColor: [\n                      '#f3f5f4',\n                      '#f4d44d',\n                      '#82c9e6',\n                      '#f45060',\n                      '#a9a9a9',\n                      '#ff939e',\n                      '#419be6',\n                      '#1e2130'\n                    ],\n                    borderColor: '#f3f5f4',\n                    borderWidth: 1\n                  }\n                ]\n              }}\n              options = {{\n                title: {\n                  display: true,\n                  text: 'Deaths'\n                },\n                legend: {\n                  display: true,\n                  position: 'left'\n                }\n              }}\n            />\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default EthnicityChart;","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchAllData} from '../../store/actions';\nimport CasesChart from './CasesChart/CasesChart';\nimport DeathsChart from './DeathsChart/DeathsChart';\nimport AgeChart from './AgeChart/AgeChart';\nimport SexChart from './SexChart/SexChart';\nimport EthnicityChart from './EthnicityChart/EthnicityChart';\nimport {BeatLoader} from 'react-spinners';\nimport './Charts.scss'\n\nconst Charts = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.base.loading);\n\n  useEffect(() => {\n    dispatch(fetchAllData());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {!loading\n        ? <div className='charts'>\n            <div className='time-charts'>\n              <CasesChart/>\n              <DeathsChart/>\n            </div>\n            <div className='demographic-charts'>\n              <AgeChart/>\n              <SexChart/>\n              <EthnicityChart/>\n            </div>\n          </div>\n        : <div className='beat-loader'>\n            <BeatLoader\n              color='#82c9e6'\n              size='25'\n              margin='15'\n            />\n          </div>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Charts;","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Charts from './components/Charts/Charts';\nimport './App.scss';\n\nconst App = () => (\n  <div className='app'>\n    <Navbar/>\n    <Charts/>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}