{"version":3,"sources":["store/reducers.js","store/types.js","store/index.js","store.js","components/Navbar/NavbarButton.jsx","components/Navbar/Navbar.jsx","store/actions.js","components/Charts/CasesChart/CasesChart.jsx","components/Charts/DeathsChart/DeathsChart.jsx","components/Charts/Charts.jsx","App.jsx","index.js"],"names":["initialBaseState","loading","baseReducer","state","action","type","initialDataState","cases","age","sex","ethnicity","dataReducer","payload","createRootReducer","combineReducers","base","data","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","NavbarButton","props","className","href","target","text","Navbar","parseCaseData","cases_json","labels","new_count_confirmed","total_count_confirmed","new_count_deaths","total_count_deaths","forEach","obj","push","Date","date","newcountconfirmed","totalcountconfirmed","newcountdeaths","totalcountdeaths","fetchCaseData","dispatch","a","axios","get","params","resource_id","q","limit","then","response","console","log","result","records","catch","error","parseAgeData","age_data","total_confirmed","confirmed_percentage","total_deaths","death_percentage","california_age_percentage","i","length","age_group","totalpositive","case_percent","deaths","deaths_percent","ca_percent","fetchAgeData","parseSexData","sex_data","california_sex_percentage","totalpositive2","fetchSexData","parseEthnicityData","ethnicity_data","california_ethnicity_percentage","race_ethnicity","case_percentage","deaths_percentage","percent_ca_population","fetchEthnicityData","CasesChart","case_data","useSelector","datasets","label","yAxisID","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointRadius","options","responsive","pan","enabled","mode","zoom","scales","xAxes","time","unit","gridLines","color","yAxes","id","position","DeathsChart","Charts","useDispatch","useEffect","Fragment","size","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b6730a8.chunk.js","sourcesContent":["import {\n  LOADING_START, \n  LOADING_END, \n  FETCH_CASE_DATA,\n  FETCH_AGE_DEMOGRAPHIC_DATA,\n  FETCH_SEX_DEMOGRAPHIC_DATA,\n  FETCH_ETHNICITY_DEMOGRAPHIC_DATA\n} from './types';\n\nconst initialBaseState = {\n  loading: false\n};\n\nexport const baseReducer = (state = initialBaseState, action) => {\n  switch (action.type) {\n    case LOADING_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOADING_END:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  };\n};\n\nconst initialDataState = {\n  cases: null,\n  age: null,\n  sex: null,\n  ethnicity: null\n};\n\nexport const dataReducer = (state = initialDataState, action) => {\n  switch (action.type) {\n    case FETCH_CASE_DATA: \n      return {\n        ...state,\n        cases: action.payload\n      };\n    case FETCH_AGE_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        age: action.payload\n      };\n    case FETCH_SEX_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        sex: action.payload\n      };\n    case FETCH_ETHNICITY_DEMOGRAPHIC_DATA:\n      return {\n        ...state,\n        ethnicity: action.payload\n      };\n    default:\n      return state;\n  };\n};","export const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\nexport const FETCH_CASE_DATA = 'FETCH_CASE_DATA';\nexport const FETCH_AGE_DEMOGRAPHIC_DATA = 'FETCH_AGE_DEMOGRAPHIC_DATA';\nexport const FETCH_SEX_DEMOGRAPHIC_DATA = 'FETCH_SEX_DEMOGRAPHIC_DATA';\nexport const FETCH_ETHNICITY_DEMOGRAPHIC_DATA = 'FETCH_ETHNICITY_DEMOGRAPHIC_DATA';","import {combineReducers} from 'redux';\nimport {baseReducer, dataReducer} from './reducers';\n\nconst createRootReducer = () => combineReducers({\n  base: baseReducer,\n  data: dataReducer\n});\n\nexport default createRootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createRootReducer from './store/index';\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import React from 'react';\n\nconst NavbarButton = (props) => (\n  <div className='navbar-button'>\n    <a href={props.href} target={props.target}>\n      <button>{props.text}</button>\n    </a>\n  </div>\n);\n\nexport default NavbarButton;","import React from 'react';\nimport NavbarButton from './NavbarButton';\n\nconst Navbar = () => {\n  return (\n    <div className='navbar'>\n      <div className='navbar-text'>\n        <h5>Santa Clara County</h5>\n        <h6>Visualizing Real-Time COVID-19 Statistics</h6>\n      </div>\n      <div className='navbar-links'>\n        <NavbarButton\n          text = 'About' \n          href = '#statistics'\n        />\n        <NavbarButton\n          text = 'Data' \n          href = 'https://data.ca.gov/dataset/covid-19-cases'\n          target = '_blank'\n        />\n        <NavbarButton\n          text = 'Source Code'\n          href = 'https://github.com/davidjtoomer/santa-clara-covid'\n          target = '_blank'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import axios from 'axios';\nimport {\n  LOADING_START, \n  LOADING_END, \n  FETCH_CASE_DATA, \n  FETCH_AGE_DEMOGRAPHIC_DATA,\n  FETCH_SEX_DEMOGRAPHIC_DATA,\n  FETCH_ETHNICITY_DEMOGRAPHIC_DATA\n} from './types';\n\nexport const loadingStart = () => ({\n  type: LOADING_START\n});\n\nexport const loadingEnd = () => ({\n  type: LOADING_END\n});\n\nexport const fetchAllData = () => dispatch => {\n  dispatch(loadingStart());\n  fetchCaseData(dispatch)\n  .then(() => fetchAgeData(dispatch))\n  .then(() => fetchSexData(dispatch))\n  .then(() => fetchEthnicityData(dispatch))\n  .then(() => dispatch(loadingEnd()));\n};\n\nconst parseCaseData = cases_json => {\n  let labels = [];\n  let new_count_confirmed = [];\n  let total_count_confirmed = [];\n  let new_count_deaths = [];\n  let total_count_deaths = [];\n\n  cases_json.forEach(obj => {\n    labels.push(new Date(obj.date));\n    new_count_confirmed.push(obj.newcountconfirmed);\n    total_count_confirmed.push(obj.totalcountconfirmed);\n    new_count_deaths.push(obj.newcountdeaths);\n    total_count_deaths.push(obj.totalcountdeaths);\n  });\n\n  return {\n    labels: labels,\n    new_count_confirmed: new_count_confirmed,\n    total_count_confirmed: total_count_confirmed,\n    new_count_deaths: new_count_deaths,\n    total_count_deaths: total_count_deaths\n  };\n};\n\nconst fetchCaseData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '926fd08f-cc91-4828-af38-bd45de97f8c3',\n      q: 'Santa Clara',\n      limit: 1000\n    }\n  })\n    .then(response => {\n      console.log(response.data); \n      dispatch({\n        type: FETCH_CASE_DATA,\n        payload: parseCaseData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseAgeData = age_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_age_percentage = [];\n  const num_categories = 5;\n\n  for (let i = age_data.length - num_categories; i < age_data.length; ++i) {\n    labels.push(age_data[i].age_group);\n    total_confirmed.push(age_data[i].totalpositive);\n    confirmed_percentage.push(age_data[i].case_percent);\n    total_deaths.push(age_data[i].deaths);\n    death_percentage.push(age_data[i].deaths_percent);\n    california_age_percentage.push(age_data[i].ca_percent);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_age_percentage: california_age_percentage\n  };\n};\n\nconst fetchAgeData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '339d1c4d-77ab-44a2-9b40-745e64e335f2',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_AGE_DEMOGRAPHIC_DATA,\n        payload: parseAgeData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseSexData = sex_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_sex_percentage = [];\n  const num_categories = 3;\n\n  for (let i = sex_data.length - num_categories; i < sex_data.length; ++i) {\n    labels.push(sex_data[i].sex);\n    total_confirmed.push(sex_data[i].totalpositive2);\n    confirmed_percentage.push(sex_data[i].case_percent);\n    total_deaths.push(sex_data[i].deaths);\n    death_percentage.push(sex_data[i].deaths_percent);\n    california_sex_percentage.push(sex_data[i].ca_percent);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_sex_percentage: california_sex_percentage\n  };\n};\n\nconst fetchSexData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: 'ee01b266-0a04-4494-973e-93497452e85f',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_SEX_DEMOGRAPHIC_DATA,\n        payload: parseSexData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nconst parseEthnicityData = ethnicity_data => {\n  let labels = [];\n  let total_confirmed = [];\n  let confirmed_percentage = [];\n  let total_deaths = [];\n  let death_percentage = [];\n  let california_ethnicity_percentage = [];\n  const num_categories = 8;\n\n  for (let i = ethnicity_data.length - num_categories; i < ethnicity_data.length; ++i) {\n    labels.push(ethnicity_data[i].race_ethnicity);\n    total_confirmed.push(ethnicity_data[i].cases);\n    confirmed_percentage.push(ethnicity_data[i].case_percentage);\n    total_deaths.push(ethnicity_data[i].deaths);\n    death_percentage.push(ethnicity_data[i].deaths_percentage);\n    california_ethnicity_percentage.push(ethnicity_data[i].percent_ca_population);\n  };\n\n  return {\n    labels: labels,\n    total_confirmed: total_confirmed,\n    confirmed_percentage: confirmed_percentage,\n    total_deaths: total_deaths,\n    death_percentage: death_percentage,\n    california_ethnicity_percentage: california_ethnicity_percentage\n  };\n};\n\nconst fetchEthnicityData = async (dispatch) => {\n  await axios.get('https://data.ca.gov/api/3/action/datastore_search', {\n    params: {\n      resource_id: '7e477adb-d7ab-4d4b-a198-dc4c6dc634c9',\n      limit: 10000\n    }\n  })\n    .then(response => {\n      console.log(response.data);\n      dispatch({\n        type: FETCH_ETHNICITY_DEMOGRAPHIC_DATA,\n        payload: parseEthnicityData(response.data.result.records)\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-zoom';\n\nconst CasesChart = () => {\n  const case_data = useSelector(state => state.data.cases);\n\n  return (\n    <div className='cases-chart-container'>\n      <div className='cases-chart-title'>\n        <h5>Confirmed Cases in Santa Clara County</h5>\n      </div>\n      <div className='cases-chart'>\n        {case_data &&\n          <Line\n            data = {{\n              labels: case_data.labels,\n              datasets: [\n                {\n                  label: 'New Confirmed Cases',\n                  data: case_data.new_count_confirmed,\n                  yAxisID: 'new',\n                  borderColor: '#82c9e6',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }, \n                {\n                  label: 'Cumulative Confirmed Cases',\n                  data: case_data.total_count_confirmed,\n                  yAxisID: 'cumulative',\n                  borderColor: '#f45060',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }\n              ]\n            }}\n            options = {{\n              responsive: true,\n              pan: {\n                enabled: true,\n                mode: 'xy'\n              },\n              zoom: {\n                enabled: true,\n                mode: 'xy'\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time: {\n                    unit: 'day'\n                  },\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }],\n                yAxes: [{\n                  id: 'new',\n                  type: 'linear',\n                  position: 'left',\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }, {\n                  id: 'cumulative',\n                  type: 'linear',\n                  position: 'right',\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }]\n              }\n            }}\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default CasesChart;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-zoom';\n\nconst DeathsChart = () => {\n  const case_data = useSelector(state => state.data.cases);\n\n  return (\n    <div className='deaths-chart-container'>\n      <div className='deaths-chart-title'>\n        <h5>Deaths from COVID-19 in Santa Clara County</h5>\n      </div>\n      <div className='deaths-chart'>\n        {case_data &&\n          <Line\n            data = {{\n              labels: case_data.labels,\n              datasets: [\n                {\n                  label: 'New COVID-19 Deaths',\n                  data: case_data.new_count_deaths,\n                  yAxisID: 'new',\n                  borderColor: '#f4d44d',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }, \n                {\n                  label: 'Cumulative COVID-19 Deaths',\n                  data: case_data.total_count_deaths,\n                  yAxisID: 'cumulative',\n                  borderColor: '#f45060',\n                  backgroundColor: 'transparent',\n                  pointBackgroundColor: 'transparent',\n                  pointBorderColor: 'transparent',\n                  pointRadius: 4\n                }\n              ]\n            }}\n            options = {{\n              responsive: true,\n              pan: {\n                enabled: true,\n                mode: 'xy'\n              },\n              zoom: {\n                enabled: true,\n                mode: 'xy'\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time: {\n                    unit: 'day'\n                  },\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }],\n                yAxes: [{\n                  id: 'new',\n                  type: 'linear',\n                  position: 'left',\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }, {\n                  id: 'cumulative',\n                  type: 'linear',\n                  position: 'right',\n                  gridLines: {\n                    color: '#1e2130'\n                  }\n                }]\n              }\n            }}\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default DeathsChart;","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchAllData} from '../../store/actions';\nimport CasesChart from './CasesChart/CasesChart';\nimport DeathsChart from './DeathsChart/DeathsChart';\nimport {BeatLoader} from 'react-spinners';\nimport './Charts.scss'\n\nconst Charts = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.base.loading);\n\n  useEffect(() => {\n    dispatch(fetchAllData());\n  }, []);\n\n  return (\n    <React.Fragment>\n      {!loading\n        ? <div className='charts'>\n            <div className='time-charts'>\n              <CasesChart/>\n              <DeathsChart/>\n            </div>\n            <div className='demographic-charts'>\n            </div>\n          </div>\n        : <div className='beat-loader'>\n            <BeatLoader\n              color='#82c9e6'\n              size='25'\n              margin='15'\n            />\n          </div>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Charts;","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Charts from './components/Charts/Charts';\nimport './App.scss';\n\nconst App = () => (\n  <div className='app'>\n    <Navbar/>\n    <Charts/>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}